1、熟练掌握单例模式的常见写法。
	饿汉式，静态饿汉式
	懒汉式，双重检查懒汉式，静态内部类式
	注册式单例：枚举式（推荐），容器式（Spring IOC实现）
	ThreadLoal式单例

2、总结每种单例写法的优、缺点。
饿汉式：避免了线程安全问题，只会有一个对象，但是如果永远没有调用，则会造成资源浪费！
懒汉式：使用的时候才会创建对象，避免了资源浪费，但是需要对方法加同步锁，多线程状态下会竞争锁，效率相对低下。
静态内部类方式：延迟加载特性，只有在使用内部类的时候，内部类才会被加载，只加载一次，利用JVM类加载机制，避免资源浪费，只会返回一个相同的单例，保证了线程安全及高效的调用
枚举式：线程安全，调用效率高，并且无法用反射实例化，无法使用序列化破坏

3、思考破坏单例模式的方式有哪些？并且归纳总结。
	反射，利用构造器实例化对象，可在构造器中增加对实例的null判断，防止利用反射调用构造器
	序列化，利用对象构造器实例化新的对象，可通过对象增加readResolve方法防止返回不同的对象，新对象被GC回收

4、静态内部类加载
    静态内部类不同与外部类的静态属性或方法（在类加载的时候初始化）
    静态内部类有延迟加载特性，只有在使用到内部类的时候，内部类才会被加载，只加载一次